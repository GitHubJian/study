编译
    编译过程就是编译器把程序分解成词法单元(token)，然后把词法单元解析成语法树(AST)，再把语法树变成机器指令等待执行的过程
    编译器查找作用域是否已经有一个名称为a的变量存在于同一个作用域的集合中。如果是，编译器会忽略该声明，继续进行编译；否则它会要求作用域在当前作用域的集合中声明一个新的变量，并命名为a
    注释：重复声明是合法的性
        1.分词(tokenizing)
            由字符组成的字符串分解成词法单元（token）
        2.解析(parsing)
            把词法单元流数组转换成一个由元素逐级嵌套所组成的代表程序语法结构的树(AST)
        3.代码生成
            将AST转换为可执行代码的过程被称为代码生成
执行
    引擎运行时会首先查询作用域，在当前的作用域集合中是否存在一个叫作a的变量。如果是，引擎就会使用这个变量；如果否，引擎会继续查找该变量
    如果引擎最终找到了变量a，就会将2赋值给它。否则引擎会抛出一个异常
查询
    当变量出现在赋值操作的左侧时进行LHS查询，出现在右侧时进行RHS查询
    LHS 对哪个赋值就对哪个进行LHS引用，可以理解为赋值操作的目标
        e.g. 
        a=b console.log 中的 a,console,log
    RHS 需要获取哪个变量的值，就对哪个变量的值进行RHS引用，理解为赋值操作的源头
        e.g.
        a=b 中的b
嵌套
    在当前作用域中无法找到某个变量时，引擎就会在外层嵌套的作用域中继续查找，直到找到该变量，或抵达最外层的作用域（也就是全局作用域）为止
异常
    系统内部定义的查找一场就是有序 LHS & RHS 引起的
变量提升hoisting
    仅仅是提升了变量的声明，而定义并不会被提升
    发生在编译阶段


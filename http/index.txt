安全问题
    1.窃听
    2.伪装
    3.完整性
    4.篡改
保护问题
    1.服务器认证
    2.客户端认证
    3.完整性
    4.加密
    5.效率
    6.普适性
    7.管理的可扩展性
    8.适应性
    9.在社会的可行性
常见攻击类型
    SQL注入-》》》jsky
        ①不当的类型处理
        ②不安全的数据库配置
        ③不合理的查询集处理
        ④不当的错误处理
        ⑤转义字符处理不合适
        ⑥多个提交处理不当
    XSS(Cross-site scripting)
        JAVASCRIPT代码被植入到HTML代码中
    CSRF（Cross-site request forgery)
        1. 用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A；
        2.在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功，可以正常发送请求到网站A；
        3. 用户未退出网站A之前，在同一浏览器中，打开一个TAB页访问网站B；
        4. 网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A；
        5. 浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站B的恶意代码被执行。
        防止攻击
            1.验证 HTTP Referer 字段
            2.在请求地址中添加 token 并验证
            3.在 HTTP 头中自定义属性并验证
    URL跳转
    网络钓鱼


HTTP请求方法
安全性：安全的方法不会修改资源状态
幂等性：是指该方法多次调用返回的效果(形式)一致

方法名  安全性  幂等性
GET     是  是
HEAD    是  是
OPTIONS 是  是
DELETE  否  是
PUT     否  是
POST    否  否
const alias = require('./build/alias');

module.exports = function(config) {
  config.set({
    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: '',
    // frameworks to use available frameworks
    frameworks: ['mocha', 'should'],
    // list of files / patterns to load in the browser
    files: ['js/*.js', 'unit/*.spec.js'],
    // preprocess matching files before serving them to the browser
    // available preprocessors:
    preprocessors: {
      'js/*.js': ['webpack'],
      'unit/*.spec.js': ['webpack']
    },
    // list of files to exclude
    exclude: [],
    // test results reporter to use possible values: 'dots', 'progress'  available reporters
    reporters: ['spec'],
    coverageReporter: {
      dir: 'coverage',
      reporters: [
        {
          type: 'json',
          subdir: '.',
          file: 'coverage.json'
        },
        {
          type: 'lcov',
          subdir: '.'
        },
        {
          type: 'text-summary'
        }
      ]
    },
    // web server port
    port: 9876,
    // enable / disable colors in the output (reporters and logs)
    colors: true,
    // level of logging possible values
    logLevel: config.LOG_INFO,
    // enable / disable watching file and executing tests whenever any file changes
    autoWatch: true,
    // start these browsers available browser launchers
    browsers: ['Chrome'],
    plugins: [
      'karma-coverage',
      'karma-mocha',
      'karma-should',
      'karma-commonjs',
      'karma-requirejs',
      'karma-spec-reporter',
      'karma-mocha-reporter',
      'karma-sourcemap-loader',
      'karma-webpack',
      'karma-phantomjs-launcher',
      'karma-chrome-launcher'
    ],
    // Continuous Integration mode
    // if true, Karma captures browsers, runs the tests and exits
    singleRun: false,
    concurrency: Infinity,
    webpack: {
      resolve: {
        alias: alias
      },
      module: {
        loaders: [
          {
            test: /\.js$/,
            loader: 'babel-loader',
            exclude: /node_modules/,
            query: {
              presets: ['es2015'],
              plugins: ['istanbul']
            }
          }
        ]
      }
    }
  });
};
https
    HTTP+加密+认证+完整性保护 === HTTPS
    互联网的通信安全，建立在SSL/TLS协议之上
作用
    1.窃听风险（eavesdropping）：第三方可以获知通信内容。
    2.篡改风险（tampering）：第三方可以修改通信内容。
    3.冒充风险（pretending）：第三方可以冒充他人身份参与通信。
目的
    1.所有信息都是加密传播，第三方无法窃听。
    2.具有校验机制，一旦被篡改，通信双方会立刻发现。
    3.配备身份证书，防止身份被冒充。
区别Http
    1.HTTP使用80 端口， HTTPS 使用443 端口
    2.HTTPS 使用的URL 以https:// 开头， 而http使用的URL 为http:// 开头
    3.HTTPS 在HTTP下面提供了一个传输级的密码安全层（SSL/TLS)
通讯步骤
    步骤 1： 客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件（Cipher Suite）列表（所使用的加密算法及密钥长度等）。 
    步骤 2： 服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。 
    步骤 3： 之后服务器发送 Certificate 报文。报文中包含公开密钥证书。 
    步骤 4： 最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的 SSL 握手协商部分结束。 
    步骤 5： SSL 第一次握手结束之后，客户端以 Client Key Exchange 报文作为回应。报文中包含通信加密中使用的一种被称为 Pre-master secret 的随机密码串。该报文已用步骤 3 中的公开密钥进行加密。 
    步骤 6： 接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret 密钥加密。 
    步骤 7： 客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。这次握手协商是否能够成功，要以服务器是否能够正确解密该报文作为判定标准。 
    步骤 8： 服务器同样发送 Change Cipher Spec 报文。 
    步骤 9： 服务器同样发送 Finished 报文。 
    步骤 10： 服务器和客户端的 Finished 报文交换完毕之后，SSL 连接就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用层协议的通信，即发送 HTTP 请求。 
    步骤 11： 应用层协议通信，即发送 HTTP 响应。 
    步骤 12： 最后由客户端断开连接。断开连接时，发送 close_notify 报文。上图做了一些省略，这步之后再发送 TCP FIN 报文来关闭与 TCP 的通信
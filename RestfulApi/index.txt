一种软件架构风格、设计风格
RESTful的关键是定义可表示流程元素/资源的对象。在REST中，每一个对象都是通过URL来表示的，对象用户负责将状态信息打包进每一条消息内，以便对象的处理总是无状态的。
RESTful的第二大问题是组合管理及流程绑定。企业对正规的（基于SOAP）SOA最大的反对声之一便是，这种等级的发现和绑定灵活性不足以适应复杂性

四个约束
    1.每个资源都拥有一个资源标识，每个资源的资源标识可以用来唯一地标明该资源
    2.消息的自描述性
    3.资源的自描述性。
    4.HATEOAS Hypermedia As The Engine Of Application State(超媒体作为应用状态引擎)
    即客户只可以通过服务端所返回各结果中所包含的信息来得到下一步操作所需要的信息，如到底是向哪个URL发送请求等。
    也就是说，一个典型的REST服务不需要额外的文档标示通过哪些URL访问特定类型的资源，而是通过服务端返回的响应来标示到底能在该资源上执行什么样的操作


1.通过URL来表示资源
2.单数 vs. 复数
3.相对路径 vs. 请求参数
4.使用合适的动词 get delete put post
5.使用标准的状态码
6.选择适当的表示结构
7.版本控制